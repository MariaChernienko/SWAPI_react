{"version":3,"sources":["components/Header/index.js","components/Header/Header.js","services/swapi-services.js","components/ErrorIndicator/index.js","components/ErrorIndicator/ErrorIndicator.js","components/Spinner/index.js","components/Spinner/Spinner.js","components/RandomPlanet/RandomPlanet.js","components/RandomPlanet/index.js","components/ErrorBoundry/index.js","components/ErrorBoundry/ErrorBoundry.js","services/dummy-swapi-services.js","components/ErrorButton/index.js","components/ErrorButton/ErrorButton.js","components/ItemDetails/ItemDetails.js","components/ItemDetails/index.js","components/HocHelpers/withData.js","components/swapi-service-context/swapi-service-context.js","components/HocHelpers/withSwapiService.js","components/SWComponents/PersonDetails.js","components/SWComponents/PlanetDetails.js","components/SWComponents/StarshipDetails.js","components/ItemList/index.js","components/ItemList/ItemList.js","components/SWComponents/ItemLists.js","components/Row/index.js","components/Row/Row.js","components/Pages/PeoplePage.js","components/Pages/StarshipsPage.js","components/Pages/PlanetsPage.js","components/Pages/LoginPage.js","components/Pages/SecretPage.js","components/App/index.js","components/App/App.js","index.js"],"names":["Header","_ref","onServiceChange","react_default","a","createElement","className","react_router_dom","to","type","onClick","SwapiService","_apiBase","_imageBase","getResource","_callee","url","res","regenerator_default","wrap","_context","prev","next","fetch","concat","_this","sent","ok","Error","status","json","abrupt","stop","getAllPeople","_callee2","_context2","results","map","_transformPerson","getPerson","_callee3","id","person","_context3","getAllPlanets","_callee4","_context4","_transfornPlanet","getPlanet","_callee5","planet","_context5","getAllStarships","_callee6","_context6","_transformStarships","getStarship","_callee7","starship","_context7","getPersonImage","_ref8","getStarshipImage","_ref9","getPlanetImage","_ref10","_extractId","item","match","name","population","rotationPeriod","rotation_period","diameter","model","manufacturer","costInCredits","cost_in_credits","length","crew","passengers","cargoCapacity","gender","birthYear","birth_year","eyeColor","eye_color","ErrorIndicator","Spinner","style","width","height","RandomPlanet","swapiService","state","loading","error","onPlanetLoaded","mounted","setState","onError","err","updatePlanet","Math","floor","random","then","catch","this","interval","setInterval","clearInterval","_this$state","hasData","errorMessage","components_ErrorIndicator","spinner","components_Spinner","content","RandomPlanet_PlanetView","Component","PlanetView","Fragment","src","alt","ErrorBoundry","hasError","props","children","DummySwapiServices","_people","_planets","_starships","ErrorButton","renderError","_this2","foo","bar","Record","field","label","ItemDetails","image","updateItem","prevProps","itemId","getData","getImageUrl","_this$props","React","Children","child","cloneElement","components_ErrorButton","withData","View","_Component","_temp","_getPrototypeOf2","Object","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","data","inherits","createClass","key","value","update","assign","createContext","SwapiServiceProvider","Provider","SwapiServiceConsumer","Consumer","withSwapiService","mapMethodsToProps","Wrapped","serviceProps","components_ItemDetails","ItemDetails_Record","ItemList","onItemSelected","renderLabel","items","withChildFunction","fn","renderName","PersonList","PlanetList","StarshipList","_ref2","Row","left","right","withRouter","history","params","components_Row","push","SWComponents_PersonDetails","SWComponents_PlanetDetails","LoginPage","isLoggedIn","onLogin","react_router","SecretPage","App","DummySwapiService","components_ErrorBoundry","components_Header","components_RandomPlanet","path","exact","render","component","PeoplePage","PlanetsPage","StarshipsPage","SWComponents_StarshipDetails","Pages_LoginPage","Pages_SecretPage","ReactDOM","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.ccdc9c6f.chunk.js","sourcesContent":["import Header from './Header';\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport \"./Header.css\";\r\n\r\nconst Header = ({ onServiceChange }) => {\r\n  return (\r\n    <div className=\"header d-flex\">\r\n      <h3>\r\n        <Link to='/'>Star DB</Link>\r\n      </h3>\r\n      <ul className=\"d-flex\">\r\n        <li>\r\n          <Link to='/people/'>People</Link>\r\n        </li>\r\n        <li>\r\n          <Link to='/planets/'>Planets</Link>\r\n        </li>\r\n        <li>\r\n          <Link to='/starships/'>Starships</Link>\r\n        </li>\r\n        <li>\r\n          <Link to='/login'>Login</Link>\r\n        </li>\r\n        <li>\r\n          <Link to='/secret'>Secret</Link>\r\n        </li>\r\n      </ul>\r\n\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary btn-sm\"\r\n        onClick={onServiceChange}\r\n      >\r\n        Change Data\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default class SwapiService {\r\n  _apiBase = \"https://swapi.co/api\";\r\n  _imageBase = \"https://starwars-visualguide.com/assets/img\";\r\n\r\n  getResource = async (url) => {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch ${url}, recieved ${res.status}`);\r\n    }\r\n\r\n    return await res.json();\r\n  }\r\n\r\n  getAllPeople = async () => {\r\n    const res = await this.getResource(`/people/`);\r\n    return res.results.map(this._transformPerson);\r\n  }\r\n\r\n  getPerson = async (id) => {\r\n    const person = await this.getResource(`/people/${id}`);\r\n    return this._transformPerson(person);\r\n  }\r\n\r\n  getAllPlanets = async () => {\r\n    const res = await this.getResource(`/planets/`);\r\n    return res.results.map(this._transfornPlanet);\r\n  }\r\n\r\n  getPlanet = async (id) => {\r\n    const planet = await this.getResource(`/planets/${id}`);\r\n    return this._transfornPlanet(planet);\r\n  }\r\n\r\n  getAllStarships = async () => {\r\n    const res = await this.getResource(`/starships/`);\r\n    return res.results.map(this._transformStarships);\r\n  }\r\n\r\n  getStarship = async (id) => {\r\n    const starship = await this.getResource(`/starships/${id}`);\r\n    return this._transformStarships(starship);\r\n  }\r\n\r\n  getPersonImage = ({ id }) => {\r\n    return `${this._imageBase}/characters/${id}.jpg`\r\n  }\r\n\r\n  getStarshipImage = ({ id }) => {\r\n    return `${this._imageBase}/starships/${id}.jpg`\r\n  }\r\n  \r\n  getPlanetImage = ({ id }) => {\r\n    return `${this._imageBase}/planets/${id}.jpg`\r\n  }\r\n\r\n  _extractId = (item) => {\r\n    const idRegExp = /\\/([0-9]*)\\/$/;\r\n    return item.url.match(idRegExp)[1];\r\n  }\r\n\r\n  _transfornPlanet = (planet) => {\r\n    return {\r\n      id: this._extractId(planet),\r\n      name: planet.name,\r\n      population: planet.population,\r\n      rotationPeriod: planet.rotation_period,\r\n      diameter: planet.diameter\r\n    };\r\n  }\r\n\r\n  _transformStarships = (starship) => {\r\n    return {\r\n      id: this._extractId(starship),\r\n      name: starship.name,\r\n      model: starship.model,\r\n      manufacturer: starship.manufacturer,\r\n      costInCredits: starship.cost_in_credits,\r\n      length: starship.length,\r\n      crew: starship.crew,\r\n      passengers: starship.passengers,\r\n      cargoCapacity: starship.cargoCapacity\r\n    };\r\n  }\r\n\r\n  _transformPerson = (person) => {\r\n    return {\r\n      id: this._extractId(person),\r\n      name: person.name,\r\n      gender: person.gender,\r\n      birthYear: person.birth_year,\r\n      eyeColor: person.eye_color\r\n    };\r\n  }\r\n}\r\n","import ErrorIndicator from './ErrorIndicator';\r\n\r\nexport default ErrorIndicator;","import React from \"react\";\r\nimport \"./ErrorIndicator.css\";\r\n\r\nconst ErrorIndicator = () => {\r\n  return (\r\n    <div className=\"alert alert-dismissible alert-danger error-indicator\">\r\n      <span className=\"boom\">BOOM!</span>\r\n      <span>Something gas gone terribly wrong</span>\r\n      <span>(but we already sent droidsto fix it)</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorIndicator;\r\n","import Spinner from './Spinner';\r\n\r\nexport default Spinner;","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"lds-css ng-scope\">\r\n      <div style={{ width: \"100%\", height: \"100%\" }} className=\"lds-ellipsis\">\r\n        <div>\r\n          <div />\r\n        </div>\r\n        <div>\r\n          <div />\r\n        </div>\r\n        <div>\r\n          <div />\r\n        </div>\r\n        <div>\r\n          <div />\r\n        </div>\r\n        <div>\r\n          <div />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Spinner;\r\n","import React, { Component } from \"react\";\r\nimport SwapiService from \"../../services/swapi-services\";\r\nimport ErrorIndicator from \"../ErrorIndicator\";\r\n\r\nimport Spinner from \"../Spinner\";\r\n\r\nimport \"./RandomPlanet.css\";\r\n\r\nexport default class RandomPlanet extends Component {\r\n  swapiService = new SwapiService();\r\n\r\n  state = {\r\n    planet: {},\r\n    loading: true,\r\n    error: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.mounted = true;\r\n    this.updatePlanet();\r\n    this.interval = setInterval(this.updatePlanet, 2000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  onPlanetLoaded = planet => {\r\n    if (this.mounted) {\r\n      this.setState({\r\n        planet,\r\n        loading: false\r\n      });\r\n    }\r\n  };\r\n\r\n  onError = err => {\r\n    this.setState({\r\n      error: true,\r\n      loading: false\r\n    });\r\n  };\r\n\r\n  updatePlanet = () => {\r\n    const id = Math.floor(Math.random() * 25 + 2);\r\n    this.swapiService\r\n      .getPlanet(id)\r\n      .then(this.onPlanetLoaded)\r\n      .catch(this.onError);\r\n  };\r\n\r\n  render() {\r\n    const { planet, loading, error } = this.state;\r\n\r\n    const hasData = !(loading || error);\r\n    const errorMessage = error ? <ErrorIndicator /> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const content = hasData ? <PlanetView planet={planet} /> : null;\r\n\r\n    return (\r\n      <div className=\"random-planet jumbotron rounded\">\r\n        {errorMessage}\r\n        {spinner}\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst PlanetView = ({ planet }) => {\r\n  const { id, name, population, rotationPeriod, diameter } = planet;\r\n  return (\r\n    <React.Fragment>\r\n      <img\r\n        className=\"planet-image\"\r\n        src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`}\r\n        alt=\"planet\"\r\n      />\r\n      <div>\r\n        <h4>{name}</h4>\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li className=\"list-group-item\">\r\n            <span className=\"term\">Population</span>\r\n            <span>{population}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span className=\"term\">Rotation period</span>\r\n            <span>{rotationPeriod}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span className=\"term\">Diameter</span>\r\n            <span>{diameter}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import RandomPlanet from './RandomPlanet';\r\n\r\nexport default RandomPlanet;","import ErrorBoundry from './ErrorBoundry';\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport ErrorIndicator from '../ErrorIndicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n  state = {\r\n    hasError: false,\r\n  };\r\n\r\n  componentDidCatch() {\r\n    this.setState({\r\n      hasError: true,\r\n    });\r\n  };\r\n  \r\n  render() {\r\n    if(this.state.hasError) {\r\n      return <ErrorIndicator />\r\n    }\r\n    return this.props.children;\r\n  }\r\n};","export default class DummySwapiServices {\r\n\r\n  _people = [\r\n    {\r\n      id: 1,\r\n      name: 'Bilbo Baggins [TEST DATA]',\r\n      gender: 'male',\r\n      birthYear: 'long ago',\r\n      eyeColor: 'dark brown'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Frodo Baggins [TEST DATA]',\r\n      gender: 'male',\r\n      birthYear: 'long ago',\r\n      eyeColor: 'dark brown'\r\n    },\r\n  ];\r\n\r\n  _planets = [\r\n    {\r\n      id: 1,\r\n      name: 'Earth [TEST DATA]',\r\n      population: '7.530.000.000',\r\n      rotationPeriod: '23 hours 56 seconds',\r\n      diameter: '12.742 km'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Venus [TEST DATA]',\r\n      population: 'not known',\r\n      rotationPeriod: '243 days',\r\n      diameter: '12.104 km'\r\n    }\r\n  ];\r\n\r\n  _starships = [\r\n    {\r\n      id: 1,\r\n      name: 'USS Enterprise [TEST DATA]',\r\n      model: 'NCC-1701-C',\r\n      manufacturer: 'Northrop Grumman Shipbuilding',\r\n      costInCredits: 'not known',\r\n      length: 'approx 300 meters',\r\n      crew: 1000,\r\n      passengers: 50,\r\n      cargoCapacity: 100\r\n    }\r\n  ];\r\n\r\n  getAllPeople = async() => {\r\n    return this._people;\r\n  };\r\n\r\n  getPerson = async() => {\r\n    return this._people[0];\r\n  };\r\n\r\n  getAllPlanets = async() => {\r\n    return this._planets;\r\n  };\r\n\r\n  getPlanet = async() => {\r\n    return this._planets[0];\r\n  };\r\n\r\n  getAllStarships = async() => {\r\n    return this._starships;\r\n  };\r\n\r\n  getStarship = async() => {\r\n    return this._starships[0];\r\n  };\r\n\r\n  getPersonImage = () => {\r\n    return `https://placeimg.com/400/500/people`;\r\n  };\r\n\r\n  getPlanetImage = () => {\r\n    return `https://placeimg.com/600/400/tech`;\r\n  };\r\n\r\n  getStarshipImage = () => {\r\n    return `https://placeimg.com/400/400/nature`;\r\n  };\r\n}","import ErrorButton from './ErrorButton';\r\n\r\nexport default ErrorButton;","import React, { Component } from \"react\";\r\nimport \"./ErrorButton.css\";\r\n\r\nexport default class ErrorButton extends Component {\r\n  state = {\r\n    renderError: false\r\n  };\r\n\r\n  render() {\r\n    if (this.state.renderError) {\r\n      this.foo.bar = 0;\r\n    }\r\n\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-danger error-button\"\r\n        onClick={() => this.setState({ renderError: true })}\r\n      >\r\n        Trow Error\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport ErrorButton from \"../ErrorButton\";\r\n\r\nimport \"./ItemDetails.css\";\r\n\r\nconst Record = ({ item, field, label }) => {\r\n  return (\r\n    <li className=\"list-group-item\">\r\n      <span className=\"term\">{label}</span>\r\n      <span>{item[field]}</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport { Record };\r\n\r\nexport default class ItemDetails extends Component {\r\n  state = {\r\n    item: null,\r\n    image: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updateItem();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      this.props.itemId !== prevProps.itemId ||\r\n      this.props.getData !== prevProps.getData ||\r\n      this.props.getImageUrl !== prevProps.getImageUrl\r\n    ) {\r\n      this.updateItem();\r\n    }\r\n  }\r\n\r\n  updateItem() {\r\n    const { itemId, getData, getImageUrl } = this.props;\r\n    if (!itemId) {\r\n      return;\r\n    }\r\n\r\n    getData(itemId).then(item => {\r\n      this.setState({ item, image: getImageUrl(item) });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { item, image } = this.state;\r\n\r\n    if (!item) {\r\n      return <span>Select ITEM from list</span>;\r\n    }\r\n\r\n    const { name } = item;\r\n\r\n    return (\r\n      <div className=\"item-details card\">\r\n        <img className=\"item-image\" src={image} alt={name} />\r\n\r\n        <div className=\"card-body\">\r\n          <h4>{name}</h4>\r\n          <ul className=\"list-group list-group-flush\">\r\n            {React.Children.map(this.props.children, child => {\r\n              return React.cloneElement(child, { item });\r\n            })}\r\n          </ul>\r\n          <div className=\"mt-2\">\r\n            <ErrorButton />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import ItemDetails, { Record } from \"./ItemDetails\";\r\n\r\nexport default ItemDetails;\r\nexport { Record };\r\n","import React, { Component } from \"react\";\r\nimport Spinner from \"../Spinner\";\r\nimport ErrorIndicator from \"../ErrorIndicator\";\r\n\r\nconst withData = View => {\r\n  return class extends Component {\r\n    state = {\r\n      data: null,\r\n      loading: true,\r\n      error: false\r\n    };\r\n\r\n    componentDidMount() {\r\n      this.update();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n      if (this.props.getData !== prevProps.getData) {\r\n        this.update();\r\n      }\r\n    }\r\n\r\n    update() {\r\n      this.setState({ loading: true, error: false });\r\n      this.props.getData().then(data => {\r\n        this.setState({\r\n          data,\r\n          loading: false\r\n        });\r\n      })\r\n      .catch(() => {\r\n        this.setState({ \r\n          loading: false, \r\n          error: true \r\n        });\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const { data, loading, error } = this.state;\r\n      if (loading) return <Spinner />;\r\n      if (error) return <ErrorIndicator />;\r\n\r\n      return <View {...this.props} data={data} />;\r\n    }\r\n  };\r\n};\r\n\r\nexport default withData;\r\n","import React from 'react';\r\n\r\nconst { \r\n  Provider: SwapiServiceProvider, \r\n  Consumer: SwapiServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n  SwapiServiceProvider,\r\n  SwapiServiceConsumer\r\n}","import React from \"react\";\r\nimport { SwapiServiceConsumer } from \"../swapi-service-context\";\r\n\r\nconst withSwapiService = (mapMethodsToProps) => (Wrapped) => {\r\n  return props => {\r\n    return (\r\n      <SwapiServiceConsumer>\r\n        {swapiService => {\r\n          const serviceProps = mapMethodsToProps(swapiService);\r\n          return <Wrapped {...props} {...serviceProps} />;\r\n        }}\r\n      </SwapiServiceConsumer>\r\n    );\r\n  };\r\n};\r\nexport default withSwapiService;","import React from \"react\";\r\nimport ItemDetails, { Record } from \"../ItemDetails\";\r\nimport { withSwapiService } from \"../HocHelpers\";\r\n\r\nconst PersonDetails = props => {\r\n  return (\r\n    <ItemDetails {...props}>\r\n      <Record field=\"gender\" label=\"Gender\" />\r\n      <Record field=\"eyeColor\" label=\"Eye Color\" />\r\n    </ItemDetails>\r\n  );\r\n};\r\n\r\nconst mapMethodsToProps = swapiService => {\r\n  return {\r\n    getData: swapiService.getPerson,\r\n    getImageUrl: swapiService.getPersonImage\r\n  };\r\n};\r\n\r\nexport default withSwapiService(mapMethodsToProps)(PersonDetails);\r\n","import React from \"react\";\r\nimport ItemDetails, { Record } from \"../ItemDetails\";\r\nimport { withSwapiService } from \"../HocHelpers\";\r\n\r\nconst PlanetDetails = props => {\r\n  return (\r\n    <ItemDetails {...props}>\r\n      <Record field=\"population\" label=\"Population\" />\r\n      <Record field=\"rotationPeriod\" label=\"Rotation Period\" />\r\n      <Record field=\"diamenter\" label=\"Diameter\" />\r\n    </ItemDetails>\r\n  );\r\n};\r\n\r\nconst mapMethodsToProps = swapiService => {\r\n  return {\r\n    getData: swapiService.getPlanet,\r\n    getImageUrl: swapiService.getPlanetImage\r\n  };\r\n};\r\n\r\nexport default withSwapiService(mapMethodsToProps)(PlanetDetails);\r\n","import React from \"react\";\r\nimport ItemDetails, { Record } from \"../ItemDetails\";\r\nimport { withSwapiService } from \"../HocHelpers\";\r\n\r\nconst StarshipDetails = props => {\r\n  return (\r\n    <ItemDetails {...props}>\r\n      <Record field=\"model\" label=\"Model\" />\r\n      <Record field=\"length\" label=\"Length\" />\r\n      <Record field=\"costInCredits\" label=\"Cost in Credits\" />\r\n    </ItemDetails>\r\n  );\r\n};\r\nconst mapMethodsToProps = swapiService => {\r\n  return {\r\n    getData: swapiService.getStarship,\r\n    getImageUrl: swapiService.getStarshipImage\r\n  };\r\n};\r\nexport default withSwapiService(mapMethodsToProps)(StarshipDetails);\r\n","import ItemList from './ItemList';\r\n\r\nexport default ItemList;","import React from \"react\";\r\n\r\nimport \"./ItemList.css\";\r\n\r\nconst ItemList = props => {\r\n  const { data, onItemSelected, children: renderLabel } = props;\r\n\r\n  const items = data.map(item => {\r\n    const { id } = item;\r\n    const label = renderLabel(item);\r\n    return (\r\n      <li\r\n        className=\"list-group-item\"\r\n        key={id}\r\n        onClick={() => onItemSelected(id)}\r\n      >\r\n        {label}\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return <ul className=\"item-list list-group\">{items}</ul>;\r\n};\r\n\r\nexport default ItemList;\r\n","import React from \"react\";\r\nimport ItemList from \"../ItemList\";\r\nimport { withData, withSwapiService } from \"../HocHelpers\";\r\n\r\nconst withChildFunction = fn => Wrapped => {\r\n  return props => {\r\n    return <Wrapped {...props}>{fn}</Wrapped>;\r\n  };\r\n};\r\n\r\nconst renderName = ({ name }) => <span>{name}</span>;\r\nconst renderModelAndName = ({ model, name }) => (\r\n  <span>\r\n    {name} ({model})\r\n  </span>\r\n);\r\n\r\nconst mapPersonMethodsToProps = swapiService => {\r\n  return {\r\n    getData: swapiService.getAllPeople\r\n  };\r\n};\r\nconst mapPlanetMethodsToProps = swapiService => {\r\n  return {\r\n    getData: swapiService.getAllPlanets\r\n  };\r\n};\r\nconst mapStarshipMethodsToProps = swapiService => {\r\n  return {\r\n    getData: swapiService.getAllStarships\r\n  };\r\n};\r\n\r\nconst PersonList = withSwapiService(mapPersonMethodsToProps)(\r\n  withData(withChildFunction(renderName)(ItemList))\r\n);\r\n\r\nconst PlanetList = withSwapiService(mapPlanetMethodsToProps)(\r\n  withData(withChildFunction(renderName)(ItemList))\r\n);\r\n\r\nconst StarshipList = withSwapiService(mapStarshipMethodsToProps)(\r\n  withData(withChildFunction(renderModelAndName)(ItemList))\r\n);\r\n\r\nexport { PersonList, PlanetList, StarshipList };\r\n","import Row from './Row';\r\n\r\nexport default Row;","import React from 'react';\r\nimport './Row.css';\r\n\r\nconst Row = ({ left, right }) => {\r\n  return (\r\n    <div className=\"row mb-2\">\r\n      <div className=\"col-md-6\">{left}</div>\r\n      <div className=\"col-md-6\">{right}</div>\r\n    </div>\r\n  )\r\n}\r\nexport default Row;","import React from \"react\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport { PersonList, PersonDetails } from \"../SWComponents\";\r\nimport Row from '../Row';\r\n\r\nconst PeoplePage = ({ history, match }) => {\r\n  const { id } = match.params;\r\n  return (\r\n    <Row \r\n      left={<PersonList onItemSelected={(id) => history.push(id)} />}\r\n      right={<PersonDetails itemId={id} />}\r\n    />\r\n  );\r\n};\r\nexport default withRouter(PeoplePage);\r\n","import React from \"react\";\r\nimport { StarshipList } from \"../SWComponents\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst StarshipsPage = ({ history }) => {\r\n  return (\r\n    <StarshipList\r\n      onItemSelected={id => history.push(id)}\r\n    />\r\n  );\r\n};\r\nexport default withRouter(StarshipsPage);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { PlanetList, PlanetDetails } from \"../SWComponents\";\r\nimport Row from \"../Row\";\r\n\r\nconst PlanetsPage = ({ history, match }) => {\r\n  const { id } = match.params;\r\n  return (\r\n    <Row\r\n      left={<PlanetList onItemSelected={id => history.push(id)} />}\r\n      right={<PlanetDetails itemId={id} />}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(PlanetsPage);\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst LoginPage = ({ isLoggedIn, onLogin }) => {\r\n\r\n  if(isLoggedIn) {\r\n    return <Redirect to=\"/\" />\r\n  }\r\n\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <p>Login to see secret page!</p>\r\n      <button className=\"btn btn-primary\" onClick={onLogin}>\r\n        Login\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst SecretPage = ({ isLoggedIn }) => {\r\n  if (isLoggedIn) {\r\n    return (\r\n      <div className=\"jumbotron text-center\">\r\n        <h3>This page is full of secrets!!!</h3>\r\n      </div>\r\n    );\r\n  }\r\n  return <Redirect to=\"/login\" />;\r\n};\r\n\r\nexport default SecretPage;\r\n","import App from './App';\r\n\r\nexport default App; ","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport Header from \"../Header\";\r\nimport RandomPlanet from \"../RandomPlanet\";\r\nimport ErrorBoundry from \"../ErrorBoundry\";\r\n\r\nimport SwapiService from \"../../services/swapi-services\";\r\nimport DummySwapiService from \"../../services/dummy-swapi-services\";\r\n\r\nimport {\r\n  PeoplePage,\r\n  StarshipsPage,\r\n  PlanetsPage,\r\n  LoginPage,\r\n  SecretPage\r\n} from \"../Pages\";\r\n\r\nimport { SwapiServiceProvider } from \"../swapi-service-context\";\r\n\r\nimport \"./App.css\";\r\nimport StarshipDetails from \"../SWComponents/StarshipDetails\";\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    swapiService: new SwapiService(),\r\n    isLoggedIn: false\r\n  };\r\n\r\n  onLogin = () => {\r\n    this.setState({ isLoggedIn: true });\r\n  };\r\n\r\n  onServiceChange = () => {\r\n    this.setState(({ swapiService }) => {\r\n      const Service =\r\n        swapiService instanceof SwapiService ? DummySwapiService : SwapiService;\r\n\r\n      return {\r\n        swapiService: new Service()\r\n      };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { isLoggedIn } = this.state;\r\n    return (\r\n      <ErrorBoundry>\r\n        <SwapiServiceProvider value={this.state.swapiService}>\r\n          <Router>\r\n            <div>\r\n              <Header onServiceChange={this.onServiceChange} />\r\n              <RandomPlanet />\r\n\r\n              <Switch>\r\n                <Route\r\n                  path=\"/\"\r\n                  exact\r\n                  render={() => <h2>Wellcome to starDB!</h2>}\r\n                />\r\n\r\n                <Route path=\"/people/:id?\" component={PeoplePage} />\r\n\r\n                <Route path=\"/planets/:id?\" component={PlanetsPage} />\r\n                <Route path=\"/starships\" exact component={StarshipsPage} />\r\n\r\n                <Route\r\n                  path=\"/starships/:id\"\r\n                  render={({ match }) => {\r\n                    const { id } = match.params;\r\n                    return <StarshipDetails itemId={id} />;\r\n                  }}\r\n                />\r\n\r\n                <Route\r\n                  path=\"/login\"\r\n                  render={() => (\r\n                    <LoginPage isLoggedIn={isLoggedIn} onLogin={this.onLogin} />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/secret\"\r\n                  render={() => <SecretPage isLoggedIn={isLoggedIn} />}\r\n                />\r\n                <Route render={() => <h2>Page not found</h2>} />\r\n              </Switch>\r\n            </div>\r\n          </Router>\r\n        </SwapiServiceProvider>\r\n      </ErrorBoundry>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}